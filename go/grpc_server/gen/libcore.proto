syntax = "proto3";

package libcore;
option go_package = "grpc_server/gen";

service LibcoreService {
  rpc Exit(EmptyReq) returns (EmptyResp) {}
  rpc Update(UpdateReq) returns (UpdateResp) {}
  //
  rpc Start(LoadConfigReq) returns (ErrorResp) {}
  rpc Stop(EmptyReq) returns (ErrorResp) {}
  rpc Test(TestReq) returns (TestResp) {}
  rpc StopTest(EmptyReq) returns (EmptyResp);
  rpc QueryStats(QueryStatsReq) returns (QueryStatsResp) {}
  rpc ListConnections(EmptyReq) returns (ListConnectionsResp) {}
  //
  rpc GetGeoIPList(EmptyReq) returns (GetGeoIPListResponse);
  rpc GetGeoSiteList(EmptyReq) returns (GetGeoSiteListResponse);
  rpc CompileGeoIPToSrs(CompileGeoIPToSrsRequest) returns (EmptyResp);
  rpc CompileGeoSiteToSrs(CompileGeoSiteToSrsRequest) returns (EmptyResp);
  //
  rpc SetSystemProxy(SetSystemProxyRequest) returns (EmptyResp);
  //
  rpc GetSystemDNS(EmptyReq) returns (GetSystemDNSResponse);
  rpc SetSystemDNS(SetSystemDNSRequest) returns (EmptyResp);
}

message EmptyReq {}

message EmptyResp {}

message ErrorResp {
  string error = 1;
}

message LoadConfigReq {
  string core_config = 1;
  bool enable_nekoray_connections = 2;
  repeated string stats_outbounds = 3;
  bool disable_stats = 4;
}

message URLTestResp {
  string outbound_tag = 1;
  int32 latency_ms = 2;
  string error = 3;
}

message TestReq {
  string config = 1;
  repeated string outbound_tags = 2;
  bool use_default_outbound = 3;
  string url = 4;
  bool test_current = 5;
  int32 max_concurrency = 6;
}

message TestResp {
  repeated URLTestResp results = 1;
}

message QueryStatsReq{
  string tag = 1;
  string direct = 2;
}

message QueryStatsResp{
  int64 traffic = 1;
}

enum UpdateAction {
  Check = 0;
  Download = 1;
}

message UpdateReq {
  UpdateAction action = 1;
  bool check_pre_release = 2;
}

message UpdateResp {
  string error = 1;
  string assets_name = 2;
  string download_url = 3;
  string release_url = 4;
  string release_note = 5;
  bool is_pre_release = 6;
}

message ListConnectionsResp {
  string nekoray_connections_json = 1;
}

message GetGeoIPListResponse {
  repeated string items = 1;
}

message GetGeoSiteListResponse {
  repeated string items = 2;
}

message CompileGeoIPToSrsRequest {
  string item = 1;
}

message CompileGeoSiteToSrsRequest {
  string item = 1;
}

message SetSystemProxyRequest {
  bool enable = 1;
  string address = 2;
}

message SetSystemDNSRequest {
  bool clear = 1;
  repeated string servers = 2;
  bool set_dhcp = 3;
}

message GetSystemDNSResponse {
  repeated string servers = 1;
  bool is_dhcp = 2;
}